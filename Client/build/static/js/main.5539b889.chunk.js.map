{"version":3,"sources":["config/config.ts","config/firebase.ts","config/logging.ts","components/AuthRoute/index.tsx","components/AuthContainer/index.tsx","components/ErrorText/index.tsx","pages/auth/change.tsx","pages/auth/forgot.tsx","pages/auth/modules/index.ts","pages/auth/login.tsx","pages/auth/logout.tsx","pages/auth/register.tsx","pages/auth/reset.tsx","pages/navbar.tsx","pages/home.tsx","config/routes.ts","pages/welcome.tsx","pages/playground.tsx","pages/compare.tsx","pages/settings.tsx","pages/chat.tsx","application.tsx","reportWebVitals.ts","index.tsx"],"names":["config","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Providers","initializeApp","google","auth","GoogleAuthProvider","DEFAULT_NAMESPACE","getDate","Date","toISOString","logging","info","message","namespace","console","log","warn","error","AuthRoute","props","children","currentUser","to","AuthContainer","header","Container","Row","Col","xs","size","offset","sm","md","lg","Card","className","CardHeader","CardBody","ErrorText","ChangePasswordPage","useState","changing","setChanging","password","setPassword","old","setOld","confirm","setConfirm","setError","history","useHistory","providerData","providerId","FormGroup","Input","autoComplete","type","name","id","placeholder","onChange","event","target","value","Button","disabled","color","block","onClick","updatePassword","then","push","catch","passwordChangeRequest","ForgotPasswordPage","sending","setSending","sent","setSent","email","setEmail","sendPasswordResetEmail","SignInWithSocialMedia","provider","Promise","resolve","reject","signInWithPopup","result","LoginPage","authenticating","setAuthenticating","formColor1","setFormColor1","formColor2","setFormColor2","Box","display","justifyContent","py","alignItems","src","alt","width","height","style","backgroundColor","borderRadius","sx","mb","mt","ml","mr","TextField","label","variant","length","input","signInWithEmailAndPassword","borderColor","LogoutPage","goBack","signOut","RegisterPage","registering","setRegistering","formColor3","setFormColor3","createUserWithEmailAndPassword","code","includes","ResetPasswordPage","verifying","setVerifying","verified","setVerified","oobCode","setOobCode","useEffect","stringParams","queryString","parse","location","search","verifyPasswordResetLink","_oobCode","verifyPasswordResetCode","Spinner","confirmPasswordReset","Navbar","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","AppBar","position","maxWidth","Toolbar","disableGutters","Typography","noWrap","component","href","fontFamily","fontWeight","letterSpacing","textDecoration","flexGrow","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","my","Tooltip","title","p","Avatar","HomePage","top","left","border","routes","path","exact","OverviewWrapper","styled","padding","Grid","spacing","container","item","RouterLink","rel","protected","Application","loading","setLoading","onAuthStateChanged","user","map","route","index","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5539b889.chunk.js","sourcesContent":["const config = {\r\n    firebase: {\r\n        apiKey: \"AIzaSyARiM_h7ceg4sfifpPMC05P0r0yr3ix8tg\",\r\n        authDomain: \"focus-app-9adab.firebaseapp.com\",\r\n        databaseURL: \"https://focus-app-9adab-default-rtdb.firebaseio.com\",\r\n        projectId: \"focus-app-9adab\",\r\n        storageBucket: \"focus-app-9adab.appspot.com\",\r\n        messagingSenderId: \"1095720158953\",\r\n        appId: \"1:1095720158953:web:32cdd88fa415528d6c5278\",\r\n        measurementId: \"G-GLY9Q7RC09\"\r\n    }\r\n}\r\n\r\nexport default config;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport config from '../config/config';\r\n\r\nconst Firebase = firebase.initializeApp(config.firebase);\r\n\r\nexport const Providers = {\r\n    google: new firebase.auth.GoogleAuthProvider()\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport default Firebase;","const DEFAULT_NAMESPACE = 'Client';\r\n\r\nconst info = (message: any, namespace?: string) => {\r\n    if (typeof message === 'string') {\r\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO] ${message}`);\r\n    } else {\r\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO]`, message);\r\n    }\r\n};\r\n\r\nconst warn = (message: any, namespace?: string) => {\r\n    if (typeof message === 'string') {\r\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN] ${message}`);\r\n    } else {\r\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN]`, message);\r\n    }\r\n};\r\n\r\nconst error = (message: any, namespace?: string) => {\r\n    if (typeof message === 'string') {\r\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR] ${message}`);\r\n    } else {\r\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR]`, message);\r\n    }\r\n};\r\n\r\nconst getDate = () => {\r\n    return new Date().toISOString();\r\n};\r\n\r\nconst logging = { info, warn, error };\r\n\r\nexport default logging;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { auth } from '../../config/firebase';\r\nimport logging from '../../config/logging';\r\n\r\nexport interface IAuthRouteProps { }\r\n\r\nconst AuthRoute: React.FunctionComponent<IAuthRouteProps> = props => {\r\n    const { children } = props;\r\n\r\n    if (!auth.currentUser) {\r\n        logging.warn('No user detected, redirecting');\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n        <div>{children}</div>\r\n    );\r\n}\r\n\r\nexport default AuthRoute;","import React from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Container, Row } from 'reactstrap';\r\n\r\nexport interface IAuthContainerProps {\r\n    header: any;\r\n}\r\n\r\nconst AuthContainer: React.FunctionComponent<IAuthContainerProps> = props => {\r\n    const { children, header } = props;\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col \r\n                    xs={{ size: 10, offset: 1 }} \r\n                    sm={{ size: 8, offset: 2 }} \r\n                    md={{ size: 6, offset: 3 }} \r\n                    lg={{ size: 4, offset: 4 }}\r\n                >\r\n                    <Card className='mt-5'>\r\n                        <CardHeader className=\"bg-primary text-white\">\r\n                            {header}\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            {children}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AuthContainer;","import React from 'react';\r\n\r\nexport interface IErrorTextProps {\r\n    error: string;\r\n}\r\n\r\nconst ErrorText: React.FunctionComponent<IErrorTextProps> = props => {\r\n    const { error } = props;\r\n\r\n    if (error === '') return null;\r\n\r\n    return (\r\n        <small className=\"text-danger\">\r\n            {error}\r\n        </small>\r\n    );\r\n}\r\n\r\nexport default ErrorText;","import React, { useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { Button, FormGroup, Input } from 'reactstrap';\r\nimport AuthContainer from '../../components/AuthContainer';\r\nimport ErrorText from '../../components/ErrorText';\r\nimport { auth } from '../../config/firebase';\r\nimport logging from '../../config/logging';\r\nimport IPageProps from '../../interfaces/page';\r\n\r\nconst ChangePasswordPage: React.FunctionComponent<IPageProps> = props => {\r\n    const [changing, setChanging] = useState<boolean>(false);\r\n    const [password, setPassword] = useState<string>('');\r\n    const [old, setOld] = useState<string>('');\r\n    const [confirm, setConfirm] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n\r\n    const history = useHistory();\r\n\r\n    const passwordChangeRequest = () => {\r\n        if (password !== confirm)\r\n        {\r\n            setError('Make sure your passwords are matching');\r\n            return;\r\n        }\r\n\r\n        if (error !== '') setError('');\r\n\r\n        setChanging(true);\r\n\r\n        auth.currentUser?.updatePassword(password)\r\n        .then(() => {\r\n            logging.info('Password change successful.');\r\n            history.push('/');\r\n        })\r\n        .catch(error => {\r\n            logging.error(error);\r\n            setChanging(false);\r\n            setError(error.message);\r\n        });\r\n    }\r\n\r\n    if (auth.currentUser?.providerData[0]?.providerId !== 'password')\r\n        return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n        <AuthContainer header=\"Change Password\">\r\n            <FormGroup>\r\n                <Input \r\n                    autoComplete=\"new-password\"\r\n                    type=\"password\"\r\n                    name=\"oldPassword\"\r\n                    id=\"oldPassword\"\r\n                    placeholder=\"Current Password\"\r\n                    onChange={event => setOld(event.target.value)}\r\n                    value={old}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Input \r\n                    autoComplete=\"new-password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={event => setPassword(event.target.value)}\r\n                    value={password}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Input \r\n                    autoComplete=\"new-password\"\r\n                    type=\"password\"\r\n                    name=\"confirm\"\r\n                    id=\"confirm\"\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={event => setConfirm(event.target.value)}\r\n                    value={confirm}\r\n                />\r\n            </FormGroup>\r\n            <Button\r\n                disabled={changing}\r\n                color=\"success\"\r\n                block\r\n                onClick={() => passwordChangeRequest()}\r\n            >\r\n                Change Password\r\n            </Button>\r\n            <ErrorText error={error} />\r\n        </AuthContainer>\r\n    );\r\n}\r\n\r\nexport default ChangePasswordPage;","import React, { useState } from 'react';\r\nimport { Button, FormGroup, Input } from 'reactstrap';\r\nimport AuthContainer from '../../components/AuthContainer';\r\nimport ErrorText from '../../components/ErrorText';\r\nimport { auth } from '../../config/firebase';\r\nimport logging from '../../config/logging';\r\nimport IPageProps from '../../interfaces/page';\r\n\r\nconst ForgotPasswordPage: React.FunctionComponent<IPageProps> = props => {\r\n    const [sending, setSending] = useState<boolean>(false);\r\n    const [sent, setSent] = useState<boolean>(false);\r\n    const [email, setEmail] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n\r\n    const resetPasswordRequest = () => {\r\n        if (error !== '') setError('');\r\n\r\n        setSending(true);\r\n\r\n        auth.sendPasswordResetEmail(email)\r\n        .then(() => {\r\n            logging.info('Email sent.');\r\n            setSent(true);\r\n            setSending(false);\r\n        })\r\n        .catch(error => {\r\n            logging.error(error);\r\n            setError(error.message);\r\n            setSending(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <AuthContainer header=\"Send Password Reset\">\r\n            {sent ?\r\n                <p>A link has been sent to your email with instructions.</p>\r\n            :\r\n                <>\r\n                    <p>Please enter your email.</p>\r\n                    <FormGroup>\r\n                        <Input \r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            onChange={event => setEmail(event.target.value)}\r\n                            value={email}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button\r\n                        disabled={sending}\r\n                        color=\"success\"\r\n                        block\r\n                        onClick={() => resetPasswordRequest()}\r\n                    >\r\n                        Send Reset Link\r\n                    </Button>\r\n                    <ErrorText error={error} />\r\n                </>\r\n            }\r\n        </AuthContainer>\r\n    );\r\n}\r\n\r\nexport default ForgotPasswordPage;","import firebase from 'firebase';\r\nimport { auth } from '../../../config/firebase';\r\n\r\nexport const SignInWithSocialMedia = (provider: firebase.auth.AuthProvider) => \r\n    new Promise<firebase.auth.UserCredential>((resolve, reject) => {\r\n        auth.signInWithPopup(provider)\r\n        .then(result => resolve(result))\r\n        .catch(error => reject(error));\r\n    });","import React, { useState } from 'react';\r\nimport { Box, FormGroup, Container, Input, Button, Card, TextField, FormControl, InputLabel, FormHelperText } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import { Button } from 'reactstrap';\r\nimport AuthContainer from '../../components/AuthContainer';\r\nimport ErrorText from '../../components/ErrorText';\r\nimport { auth, Providers } from '../../config/firebase';\r\nimport logging from '../../config/logging';\r\nimport IPageProps from '../../interfaces/page';\r\nimport firebase from 'firebase';\r\nimport { SignInWithSocialMedia } from './modules';\r\nimport { styled } from '@mui/material/styles';\r\nimport \"./auth.css\"\r\n\r\nconst LoginPage: React.FunctionComponent<IPageProps> = props => {\r\n    const [authenticating, setAuthenticating] = useState<boolean>(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n    const [formColor1, setFormColor1] = useState('');\r\n    const [formColor2, setFormColor2] = useState('');\r\n\r\n    const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value);\r\n\r\n        // Change the form color based on the input value condition\r\n        if (event.target.value.length > 0) {\r\n            setFormColor1('');\r\n        } else {\r\n            setFormColor1('');\r\n        }\r\n    };\r\n\r\n    const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n\r\n        // Change the form color based on the input value condition\r\n        if (event.target.value.length > 0) {\r\n            setFormColor2('');\r\n        } else {\r\n            setFormColor2('');\r\n        }\r\n    };\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const signInWithEmailAndPassword = () => {\r\n        if (error !== '') setError('');\r\n\r\n\r\n        setAuthenticating(true);\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(result => {\r\n                logging.info(result);\r\n                history.push('/homepage');\r\n                // window.location.href = '/homepage';\r\n            })\r\n            .catch(error => {\r\n                logging.error(error);\r\n                setAuthenticating(false);\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    const signInWithSocialMedia = (provider: firebase.auth.AuthProvider) => {\r\n        if (error !== '') setError('');\r\n\r\n        setAuthenticating(true);\r\n\r\n        SignInWithSocialMedia(provider)\r\n            .then(result => {\r\n                logging.info(result);\r\n                history.push('/homepage');\r\n                // window.location.href = '/homepage';\r\n            })\r\n            .catch(error => {\r\n                logging.error(error);\r\n                setAuthenticating(false);\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" justifyContent=\"center\" py={7} alignItems=\"center\" className=\"box-style\">\r\n                <Link to=\"/\">\r\n                    <img\r\n                        src=\"/static/images/logo/title.png\"\r\n                        alt=\"Typescript\"\r\n                        width=\"100\"\r\n                        height=\"100\"\r\n                    />\r\n                </Link>\r\n                <br />\r\n                <h1>SIGN IN</h1>\r\n            </Box>\r\n            <Container className='container-style text-style'>\r\n                <Card className='card-style' style={{ backgroundColor: '#111633', borderRadius: '80px' }}>\r\n                    <Box sx={{ mb: 0, mt: '12%', ml: '23.4%', mr: '22.3%' }} alignItems=\"center\">\r\n                        <div className='div-style'>\r\n                            <h6 className='text-style'>EMAIL</h6>\r\n                            <TextField\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                label=\"Please enter your Email\"\r\n                                variant=\"standard\"\r\n                                autoComplete=\"current-email\"\r\n                                onChange={handleChangeEmail}\r\n                                value={email}\r\n                                style={{ width: '300px', backgroundColor: formColor1 }}\r\n                                sx={{ input: { color: 'white' } }}\r\n                                color='info'\r\n                            />\r\n\r\n                        </div>\r\n                        <div className='div-style'>\r\n                            <h6 className='text-style'>PASSWORD</h6>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Please enter your password\"\r\n                                variant=\"standard\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleChangePassword}\r\n                                value={password}\r\n                                style={{ width: '300px', backgroundColor: formColor2 }}\r\n                                sx={{ input: { color: 'white' } }}\r\n                                color='info'\r\n                            />\r\n                        </div>\r\n                        <div className='div-button-style'>\r\n                            <Button\r\n                                disabled={authenticating}\r\n                                variant=\"contained\"\r\n                                color=\"success\"\r\n                                onClick={() => signInWithEmailAndPassword()}\r\n                                sx={{ mb: '20px', display: 'block', width: '300px' }}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                            <small >\r\n                                <p className='m-1 text-center text-style'>Don't have an account? <Link to=\"/register\">Register here.</Link></p>\r\n                                <p className='m-1 text-center text-style'><Link to=\"/forget\">Forget your password?</Link></p>\r\n                            </small>\r\n                            <ErrorText error={error} />\r\n                            <hr className=\"bg-info m-3\" />\r\n                            <Button\r\n                                disabled={authenticating}\r\n                                variant=\"contained\"\r\n                                color=\"success\"\r\n                                onClick={() => signInWithSocialMedia(Providers.google)}\r\n                                sx={{ mb: '20px', display: 'block', width: '300px' }}\r\n                                style={{ backgroundColor: '#ea4335', borderColor: '#ea4335' }}\r\n                            >\r\n                                <i className=\"fab fa-google mr-2\"></i> Sign in with Google\r\n                            </Button>\r\n                        </div>\r\n                    </Box>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport AuthContainer from '../../components/AuthContainer';\r\nimport { auth } from '../../config/firebase';\r\nimport logging from '../../config/logging';\r\nimport IPageProps from '../../interfaces/page';\r\n\r\nconst LogoutPage: React.FunctionComponent<IPageProps> = props => {\r\n    const history = useHistory();\r\n\r\n    const Logout = () => {\r\n        auth.signOut()\r\n        .then(() => history.push('/login'))\r\n        .catch(error => logging.error(error));\r\n    }\r\n\r\n    return (\r\n        <AuthContainer header=\"Logout\">\r\n            <p className='text-center'>Are you sure you want to logout?</p>\r\n            <div className='text-center'>\r\n                <Button color=\"danger\" className=\"mr-2\" onClick={() => history.goBack()}>Cancel</Button>\r\n                <Button color=\"info\" className=\"mr-2\" onClick={() => Logout()}>Logout</Button>\r\n            </div>\r\n        </AuthContainer>\r\n    );\r\n}\r\n\r\nexport default LogoutPage;","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Box, FormGroup, Container, Input, Button, Card, TextField, CardContent, FormLabel } from '@mui/material';\r\nimport AuthContainer from '../../components/AuthContainer';\r\nimport ErrorText from '../../components/ErrorText';\r\nimport logging from '../../config/logging';\r\nimport IPageProps from '../../interfaces/page';\r\nimport { SignInWithSocialMedia } from './modules';\r\nimport firebase from 'firebase';\r\nimport { auth, Providers } from '../../config/firebase';\r\nimport \"./auth.css\"\r\n\r\nconst RegisterPage: React.FunctionComponent<IPageProps> = props => {\r\n    const [authenticating, setAuthenticating] = useState<boolean>(false);\r\n    const [registering, setRegistering] = useState<boolean>(false);\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [confirm, setConfirm] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n\r\n    const [formColor1, setFormColor1] = useState('');\r\n    const [formColor2, setFormColor2] = useState('');\r\n    const [formColor3, setFormColor3] = useState('');\r\n\r\n    const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value);\r\n\r\n        // Change the form color based on the input value condition\r\n        if (event.target.value.length > 0) {\r\n            setFormColor1('');\r\n        } else {\r\n            setFormColor1('');\r\n        }\r\n    };\r\n\r\n    const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n\r\n        // Change the form color based on the input value condition\r\n        if (event.target.value.length > 0) {\r\n            setFormColor2('');\r\n        } else {\r\n            setFormColor2('');\r\n        }\r\n    };\r\n\r\n    const handleChangeConfirmPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setConfirm(event.target.value);\r\n\r\n        // Change the form color based on the input value condition\r\n        if (event.target.value.length > 0) {\r\n            setFormColor3('');\r\n        } else {\r\n            setFormColor3('');\r\n        }\r\n    };\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const signUpWithEmailAndPassword = () => {\r\n        if (password !== confirm) {\r\n            setError('Please make sure your passwords match.');\r\n            return;\r\n        }\r\n\r\n        if (error !== '') setError('');\r\n\r\n        setRegistering(true);\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(result => {\r\n                logging.info(result);\r\n                history.push('/login');\r\n            })\r\n            .catch(error => {\r\n                logging.error(error);\r\n\r\n                if (error.code.includes('auth/weak-password')) {\r\n                    setError('Please enter a stronger password.');\r\n                }\r\n                else if (error.code.includes('auth/email-already-in-use')) {\r\n                    setError('Email already in use.');\r\n                }\r\n                else {\r\n                    setError('Unable to register.  Please try again later.')\r\n                }\r\n\r\n                setRegistering(false);\r\n            });\r\n    }\r\n\r\n    const signInWithSocialMedia = (provider: firebase.auth.AuthProvider) => {\r\n        if (error !== '') setError('');\r\n\r\n        setAuthenticating(true);\r\n\r\n        SignInWithSocialMedia(provider)\r\n            .then(result => {\r\n                logging.info(result);\r\n                history.push('/homepage');\r\n                // window.location.href = 'http://localhost:5432/';\r\n            })\r\n            .catch(error => {\r\n                logging.error(error);\r\n                setAuthenticating(false);\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        // <AuthContainer header=\"Register\">\r\n        //     <FormGroup>\r\n        //         <Input \r\n        //             type=\"email\"\r\n        //             name=\"email\"\r\n        //             id=\"email\"\r\n        //             placeholder=\"Email Address\"\r\n        //             onChange={event => setEmail(event.target.value)}\r\n        //             value={email}\r\n        //         />\r\n        //     </FormGroup>\r\n        //     <FormGroup>\r\n        //         <Input \r\n        //             autoComplete=\"new-password\"\r\n        //             type=\"password\"\r\n        //             name=\"password\"\r\n        //             id=\"password\"\r\n        //             placeholder=\"Enter Password\"\r\n        //             onChange={event => setPassword(event.target.value)}\r\n        //             value={password}\r\n        //         />\r\n        //     </FormGroup>\r\n        //     <FormGroup>\r\n        //         <Input \r\n        //             autoComplete=\"new-password\"\r\n        //             type=\"password\"\r\n        //             name=\"confirm\"\r\n        //             id=\"confirm\"\r\n        //             placeholder=\"Confirm Password\"\r\n        //             onChange={event => setConfirm(event.target.value)}\r\n        //             value={confirm}\r\n        //         />\r\n        //     </FormGroup>\r\n        //     <Button\r\n        //         disabled={registering}\r\n        //         color=\"success\"\r\n        //         block\r\n        //         onClick={() => signUpWithEmailAndPassword()}\r\n        //     >\r\n        //         Sign Up\r\n        //     </Button>\r\n        //     <small>\r\n        //         <p className='m-1 text-center'>Already have an account? <Link to=\"/login\">Login.</Link></p>\r\n        //     </small>\r\n        //     <ErrorText error={error} />\r\n        // </AuthContainer>\r\n        <>\r\n            {/* <AuthContainer header=\"Register\"> */}\r\n            <Box display=\"flex\" justifyContent=\"center\" py={7} alignItems=\"center\" className=\"box-style\">\r\n                <Link to=\"/\">\r\n                    <img\r\n                        src=\"/static/images/logo/title.png\"\r\n                        alt=\"Typescript\"\r\n                        width=\"100\"\r\n                        height=\"100\"\r\n                    />\r\n                </Link>\r\n                <br />\r\n                <h1>SIGN UP</h1>\r\n            </Box>\r\n            <Container className='container-style text-style'>\r\n                <Card className='card-style-signup' style={{ backgroundColor: '#111633', borderRadius: '80px' }}>\r\n                    <Box sx={{ mb: 0, mt: '12%', ml: '23.4%', mr: '22.3%' }} alignItems=\"center\">\r\n                        <div className='div-style-confirm'>\r\n                            <h6 className='text-style'>EMAIL</h6>\r\n                            <TextField\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                variant=\"standard\"\r\n                                autoComplete=\"current-email\"\r\n                                onChange={handleChangeEmail}\r\n                                value={email}\r\n                                style={{ width: '300px', backgroundColor: formColor1 }}\r\n                                sx={{ input: { color: 'white' } }}\r\n                                color='info'\r\n                            />\r\n                        </div>\r\n                        <div className='div-style-confirm'>\r\n                            <h6 className='text-style'>PASSWORD</h6>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"standard\"\r\n                                autoComplete=\"new-password\"\r\n                                onChange={handleChangePassword}\r\n                                value={password}\r\n                                style={{ width: '300px', backgroundColor: formColor2 }}\r\n                                sx={{ input: { color: 'white' } }}\r\n                                color='info'\r\n                            />\r\n                        </div>\r\n                        <div className='div-style-confirm'>\r\n                            <h6 className='text-style'>CONFIRM PASSWORD</h6>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                name=\"confirm\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"standard\"\r\n                                autoComplete=\"new-password\"\r\n                                onChange={handleChangeConfirmPassword}\r\n                                value={confirm}\r\n                                style={{ width: '300px', backgroundColor: formColor3 }}\r\n                                sx={{ input: { color: 'white' } }}\r\n                                color='info'\r\n                            />\r\n                        </div>\r\n                        <div className='div-button-style'>\r\n                            <Button\r\n                                disabled={registering}\r\n                                variant=\"contained\"\r\n                                color=\"success\"\r\n                                onClick={() => signUpWithEmailAndPassword()}\r\n                                sx={{ mb: '20px', display: 'block', width: '300px' }}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <small>\r\n                                <p className='m-1 text-center'>Already have an account? <Link to=\"/login\">Login.</Link></p>\r\n                            </small>\r\n                            <ErrorText error={error} />\r\n                            <hr className=\"bg-info m-3\" />\r\n                            <Button\r\n                                disabled={authenticating}\r\n                                variant=\"contained\"\r\n                                color=\"success\"\r\n                                onClick={() => signInWithSocialMedia(Providers.google)}\r\n                                sx={{ mb: '20px', display: 'block', width: '300px' }}\r\n                                style={{ backgroundColor: '#ea4335', borderColor: '#ea4335' }}\r\n                            >\r\n                                <i className=\"fab fa-google mr-2\"></i> Sign in with Google\r\n                            </Button>\r\n                        </div>\r\n                    </Box>\r\n                </Card>\r\n            </Container>\r\n            {/* </AuthContainer> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\r\nimport { Button, FormGroup, Input, Spinner } from 'reactstrap';\r\nimport AuthContainer from '../../components/AuthContainer';\r\nimport ErrorText from '../../components/ErrorText';\r\nimport { auth } from '../../config/firebase';\r\nimport logging from '../../config/logging';\r\nimport IPageProps from '../../interfaces/page';\r\nimport queryString from 'querystring';\r\n\r\nconst ResetPasswordPage: React.FunctionComponent<IPageProps & RouteComponentProps> = props => {\r\n    const [verifying, setVerifying] = useState<boolean>(true);\r\n    const [verified, setVerified] = useState<boolean>(false);\r\n    const [changing, setChanging] = useState<boolean>(false);\r\n    const [password, setPassword] = useState<string>('');\r\n    const [confirm, setConfirm] = useState<string>('');\r\n    const [oobCode, setOobCode] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        logging.info('Extracting code');\r\n\r\n        let stringParams = queryString.parse(props.location.search);\r\n\r\n        if (stringParams)\r\n        {\r\n            let oobCode = stringParams.oobCode as string;\r\n\r\n            if (oobCode)\r\n            {\r\n                logging.info('Code found');\r\n                verifyPasswordResetLink(oobCode);\r\n            }\r\n            else\r\n            {\r\n                logging.error('Unable to find code');\r\n                setVerified(false);\r\n                setVerifying(false);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            logging.error('Unable to find code');\r\n            setVerified(false);\r\n            setVerifying(false);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const verifyPasswordResetLink = (_oobCode: string) => {\r\n        auth.verifyPasswordResetCode(_oobCode)\r\n        .then(result => {\r\n            logging.info(result);\r\n            setOobCode(_oobCode);\r\n            setVerified(true);\r\n            setVerifying(false);\r\n        })\r\n        .catch(error => {\r\n            logging.error(error);\r\n            setVerified(false);\r\n            setVerifying(false);\r\n        });\r\n    }\r\n\r\n    const passwordResetRequest = () => {\r\n        if (password !== confirm)\r\n        {\r\n            setError('Make sure your passwords are matching');\r\n            return;\r\n        }\r\n\r\n        if (error !== '') setError('');\r\n\r\n        setChanging(true);\r\n\r\n        auth.confirmPasswordReset(oobCode, password)\r\n        .then(() => {\r\n            history.push('/login');\r\n        })\r\n        .catch(error => {\r\n            logging.error(error);\r\n            setError(error.message);\r\n            setChanging(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AuthContainer header=\"Reset Password\">\r\n            {verifying ?\r\n                <Spinner color=\"info\" />\r\n            :\r\n                <>\r\n                    {verified ?\r\n                        <>\r\n                            <p>Please enter a strong password.</p>\r\n                            <FormGroup>\r\n                                <Input \r\n                                    autoComplete=\"new-password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    onChange={event => setPassword(event.target.value)}\r\n                                    value={password}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Input \r\n                                    autoComplete=\"new-password\"\r\n                                    type=\"password\"\r\n                                    name=\"confirm\"\r\n                                    id=\"confirm\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    onChange={event => setConfirm(event.target.value)}\r\n                                    value={confirm}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button\r\n                                disabled={changing}\r\n                                color=\"success\"\r\n                                block\r\n                                onClick={() => passwordResetRequest()}\r\n                            >\r\n                                Reset Password\r\n                            </Button>\r\n                            <ErrorText error={error} />\r\n                        </>\r\n                    :\r\n                        <p>Invalid link.</p>\r\n                    }\r\n                </>\r\n            }\r\n        </AuthContainer>\r\n    );\r\n}\r\n\r\nexport default ResetPasswordPage;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\r\n    const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n\r\n    const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSettings = () => {\r\n        history.push('/homepage/settings');\r\n    };\r\n\r\n    const handleChangePass = () => {\r\n        history.push('/forget');\r\n    };\r\n\r\n    const handleLogOut = () => {\r\n        history.push('/logout');\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar disableGutters className='toolbar-style'>\r\n                    {/* <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} /> */}\r\n                    <img alt=\"Remy Sharp\" src=\"/static/images/logo/logo.png\" style={{ width: '80px', height: '80px' }} />\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        noWrap\r\n                        component=\"a\"\r\n                        href=\"/\"\r\n                        sx={{\r\n                            mr: 10,\r\n                            display: { xs: 'none', md: 'flex' },\r\n                            fontFamily: '@font-face, Logirent',\r\n                            fontWeight: 700,\r\n                            letterSpacing: '.2rem',\r\n                            color: 'white',\r\n                            textDecoration: 'none',\r\n                        }}\r\n                    >\r\n                        REPEATER AI\r\n                    </Typography>\r\n\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleOpenNavMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElNav}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={Boolean(anchorElNav)}\r\n                            onClose={handleCloseNavMenu}\r\n                            sx={{\r\n                                display: { xs: 'block', md: 'none' },\r\n                            }}\r\n                        >\r\n                            <MenuItem key=\"playground\" onClick={handleCloseNavMenu}>\r\n                                <Typography textAlign=\"center\">PLAYGROUND</Typography>\r\n                            </MenuItem>\r\n                            <MenuItem key=\"playground\" onClick={handleCloseNavMenu}>\r\n                                <Typography textAlign=\"center\">COMPARE</Typography>\r\n                            </MenuItem>\r\n                            <MenuItem key=\"playground\" onClick={handleCloseNavMenu}>\r\n                                <Typography textAlign=\"center\">SETTINGS</Typography>\r\n                            </MenuItem><MenuItem key=\"playground\" onClick={handleCloseNavMenu}>\r\n                                <Typography textAlign=\"center\">CHAT</Typography>\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </Box>\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        <Button\r\n                            key=\"playground\"\r\n                            href=\"/homepage/playground\"\r\n                            sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                            PLAYGROUND\r\n                        </Button>\r\n                        <Button\r\n                            key=\"playground\"\r\n                            href=\"/homepage/compare\"\r\n                            sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                            Compare\r\n                        </Button>\r\n                        {/* <Button\r\n                            key=\"playground\"\r\n                            href=\"/homepage/settings\"\r\n                            sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                            Settings\r\n                        </Button> */}\r\n                        <Button\r\n                            key=\"playground\"\r\n                            href=\"/homepage/chat\"\r\n                            sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                            Chat\r\n                        </Button>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{ flexGrow: 0 }}>\r\n                        <Tooltip title=\"Open settings\">\r\n                            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                                <Avatar alt=\"Remy Sharp\" src=\"/static/images/logo/user1.png\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            sx={{ mt: '45px' }}\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElUser}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={Boolean(anchorElUser)}\r\n                            onClose={handleCloseUserMenu}\r\n                        >\r\n                            {/* {settings.map((setting) => (\r\n                                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                                    <Typography textAlign=\"center\">{setting}</Typography>\r\n                                </MenuItem>\r\n                            ))} */}\r\n                            <MenuItem key=\"changePassword\" onClick={handleSettings}>\r\n                                <Typography textAlign=\"center\">Settings</Typography>\r\n                            </MenuItem>\r\n                            <MenuItem key=\"changePassword\" onClick={handleChangePass}>\r\n                                <Typography textAlign=\"center\">Change Password</Typography>\r\n                            </MenuItem>\r\n                            <MenuItem key=\"logOut\" onClick={handleLogOut}>\r\n                                <Typography textAlign=\"center\">Log Out</Typography>\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar >\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport IPageProps from '../interfaces/page';\r\n\r\n\r\nimport Navbar from './navbar';\r\n\r\nconst HomePage: React.FunctionComponent<IPageProps> = props => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div style={{ position: 'fixed', top: 'auto', left: 0, width: '100%', height: '100%' }}>\r\n                <iframe\r\n                    src=\"http://localhost:5432/\"\r\n                    title=\"homepage\"\r\n                    style={{ width: '100%', height: '100%', border: 'none' }}\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default HomePage;","import IRoute from \"../interfaces/route\";\r\nimport ChangePasswordPage from \"../pages/auth/change\";\r\nimport ForgotPasswordPage from \"../pages/auth/forgot\";\r\nimport LoginPage from \"../pages/auth/login\";\r\nimport LogoutPage from \"../pages/auth/logout\";\r\nimport RegisterPage from \"../pages/auth/register\";\r\nimport ResetPasswordPage from \"../pages/auth/reset\";\r\nimport HomePage from \"../pages/home\";\r\nimport Welcome from \"../pages/welcome\";\r\nimport Playground from \"../pages/playground\";\r\nimport Compare from \"../pages/compare\";\r\nimport Settings from \"../pages/settings\";\r\nimport Chat from \"../pages/chat\";\r\n\r\n\r\nconst routes: IRoute[] = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Welcome,\r\n        name: 'Welcome',\r\n        protected: false\r\n    },\r\n    {\r\n        path: '/homepage',\r\n        exact: true,\r\n        component: HomePage,\r\n        name: 'Home Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/homepage/playground',\r\n        exact: true,\r\n        component: Playground,\r\n        name: 'Home Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/homepage/compare',\r\n        exact: true,\r\n        component: Compare,\r\n        name: 'Home Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/homepage/settings',\r\n        exact: true,\r\n        component: Settings,\r\n        name: 'Home Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/homepage/chat',\r\n        exact: true,\r\n        component: Chat,\r\n        name: 'Home Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        component: RegisterPage,\r\n        name: 'Register Page',\r\n        protected: false\r\n    },\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        component: LoginPage,\r\n        name: 'Login Page',\r\n        protected: false\r\n    },\r\n    {\r\n        path: '/change',\r\n        exact: true,\r\n        component: ChangePasswordPage,\r\n        name: 'Change Password Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/logout',\r\n        exact: true,\r\n        component: LogoutPage,\r\n        name: 'Logout Page',\r\n        protected: true\r\n    },\r\n    {\r\n        path: '/forget',\r\n        exact: true,\r\n        component: ForgotPasswordPage,\r\n        name: 'Forgot Password Page',\r\n        protected: false\r\n    },\r\n    {\r\n        path: '/reset',\r\n        exact: true,\r\n        component: ResetPasswordPage,\r\n        name: 'Reset Password Page',\r\n        protected: false\r\n    }\r\n];\r\n\r\nexport default routes;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport IPageProps from '../interfaces/page';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Box, Button, Container, Grid, Card } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\n\r\nconst Welcome: React.FunctionComponent<IPageProps> = props => {\r\n    const OverviewWrapper = styled(Box)(\r\n        () => `\r\n          overflow: auto;\r\n          flex: 1;\r\n          overflow-x: hidden;\r\n          align-items: center;\r\n      `\r\n    );\r\n\r\n    const cardStyle = {\r\n        backgroundColor: '#111633', // Set the desired background color here\r\n        padding: '100px',\r\n        borderRadius: '150px',\r\n    };\r\n\r\n    return (\r\n        <OverviewWrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <Box display=\"flex\" justifyContent=\"center\" py={4} alignItems=\"center\">\r\n                </Box>\r\n                <div>\r\n                    <Card sx={{ p: 10, mb: 5, borderRadius: 12 }} style={cardStyle}>\r\n                        <Container maxWidth=\"lg\" sx={{ textAlign: 'center' }} >\r\n\r\n                            <Grid\r\n                                spacing={{ xs: 6, mb: 10 }}\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                container\r\n                            >\r\n                                <Grid item >\r\n                                    {/* <LabelWrapper color=\"success\">Version 2.0.0</LabelWrapper> */}\r\n                                    <div>\r\n                                        <img\r\n                                            src=\"/static/images/logo/2.svg\"\r\n                                            alt=\"Typescript\"\r\n                                            width=\"800\"\r\n                                            height=\"600\"\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <Button\r\n                                        component={RouterLink}\r\n                                        to=\"/homepage\"\r\n                                        size=\"large\"\r\n                                        variant=\"contained\"\r\n                                    >\r\n                                        Try for Free\r\n                                    </Button>\r\n                                    <Button\r\n                                        sx={{ ml: 3 }}\r\n                                        // component=\"a\"\r\n                                        // target=\"_blank\"\r\n                                        rel=\"noopener\"\r\n                                        href=\"/status/coming-soon\"\r\n                                        // size=\"large\"\r\n                                        variant=\"text\"\r\n                                    >\r\n                                        COMING SOON\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </OverviewWrapper>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport IPageProps from '../interfaces/page';\r\n\r\n\r\nimport Navbar from './navbar';\r\n\r\nconst Playground: React.FunctionComponent<IPageProps> = props => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div style={{ position: 'fixed', top: 'auto', left: 0, width: '100%', height: '100%' }}>\r\n                <iframe\r\n                    src=\"http://localhost:5432/\"\r\n                    title=\"playground\"\r\n                    style={{ width: '100%', height: '100%', border: 'none' }}\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Playground;","import React from 'react';\r\nimport IPageProps from '../interfaces/page';\r\n\r\n\r\nimport Navbar from './navbar';\r\n\r\nconst Compare: React.FunctionComponent<IPageProps> = props => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div style={{ position: 'fixed', top: 'auto', left: 0, width: '100%', height: '100%' }}>\r\n                <iframe\r\n                    src=\"http://localhost:5432/compare\"\r\n                    title=\"compare\"\r\n                    style={{ width: '100%', height: '100%', border: 'none' }}\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Compare;","import React from 'react';\r\nimport IPageProps from '../interfaces/page';\r\n\r\n\r\nimport Navbar from './navbar';\r\n\r\nconst Settings: React.FunctionComponent<IPageProps> = props => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div style={{ position: 'fixed', top: 'auto', left: 0, width: '100%', height: '100%' }}>\r\n                <iframe\r\n                    src=\"http://localhost:5432/settings\"\r\n                    title=\"settings\"\r\n                    style={{ width: '100%', height: '100%', border: 'none' }}\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport IPageProps from '../interfaces/page';\r\n\r\n\r\nimport Navbar from './navbar';\r\nimport { colors } from '@mui/material';\r\n\r\nconst Chat: React.FunctionComponent<IPageProps> = props => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div>\r\n                <h1 style={{ color: \"white\" }}>Coming Soon!</h1>\r\n            </div >\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Chat;","import React, { useEffect, useState } from 'react';\r\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom';\r\nimport { Spinner } from 'reactstrap';\r\nimport AuthRoute from './components/AuthRoute';\r\nimport { auth } from './config/firebase';\r\nimport logging from './config/logging';\r\nimport routes from './config/routes';\r\n\r\n\r\nexport interface IApplicationProps { }\r\n\r\nconst Application: React.FunctionComponent<IApplicationProps> = props => {\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                logging.info('User detected.');\r\n            }\r\n            else {\r\n                logging.info('No user detected');\r\n            }\r\n\r\n            setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    if (loading)\r\n        return <Spinner color=\"info\" />\r\n\r\n    return (\r\n\r\n        <div style={{ backgroundColor: \"#070c27\" }}>\r\n            <Switch>\r\n                {routes.map((route, index) =>\r\n                    <Route\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        render={(routeProps: RouteComponentProps<any>) => {\r\n                            if (route.protected)\r\n                                return <AuthRoute><route.component  {...routeProps} /></AuthRoute>;\r\n\r\n                            return <route.component  {...routeProps} />;\r\n                        }}\r\n                    />)}\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Application;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Application from './application';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Application />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}